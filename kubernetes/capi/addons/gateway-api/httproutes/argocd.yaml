apiVersion: gateway.networking.k8s.io/v1beta1
kind: HTTPRoute
metadata:
  name: argocd-internal
  namespace: argocd
  annotations:
    gateway.networking.k8s.io/description: "Internal access to ArgoCD"
spec:
  parentRefs:
  - name: internal-gateway
    namespace: nginx-gateway
    sectionName: http-internal
  hostnames:
  - "argocd.${CLUSTER_NAME}.home.io"
  rules:
  - matches:
    - path:
        type: PathPrefix
        value: /
    backendRefs:
    - name: argocd-server
      port: 80
      weight: 100
    filters:
    - type: RequestHeaderModifier
      requestHeaderModifier:
        set:
        - name: X-Forwarded-Proto
          value: http
        - name: X-Forwarded-Host
          value: "argocd.${CLUSTER_NAME}.home.io"
---
apiVersion: gateway.networking.k8s.io/v1beta1
kind: HTTPRoute
metadata:
  name: argocd-external
  namespace: argocd
  annotations:
    gateway.networking.k8s.io/description: "External access to ArgoCD via Cloudflare Tunnel"
spec:
  parentRefs:
  - name: external-gateway
    namespace: nginx-gateway
    sectionName: http-external
  hostnames:
  - "argocd.${CLUSTER_NAME}.lab.techdufus.com"
  rules:
  - matches:
    - path:
        type: PathPrefix
        value: /
    backendRefs:
    - name: argocd-server
      port: 80
      weight: 100
    filters:
    # Headers for ArgoCD to work properly behind proxy
    - type: RequestHeaderModifier
      requestHeaderModifier:
        set:
        - name: X-Forwarded-Proto
          value: https  # Cloudflare terminates TLS
        - name: X-Forwarded-Host
          value: "argocd.${CLUSTER_NAME}.lab.techdufus.com"
        - name: X-Real-IP
          value: "%{REMOTE_ADDR}"
    # ArgoCD-specific headers for gRPC support
    - type: ResponseHeaderModifier
      responseHeaderModifier:
        set:
        - name: grpc-timeout
          value: "300s"
---
# HTTPS routes for internal access (when using TLS)
apiVersion: gateway.networking.k8s.io/v1beta1
kind: HTTPRoute
metadata:
  name: argocd-internal-tls
  namespace: argocd
  annotations:
    gateway.networking.k8s.io/description: "Internal HTTPS access to ArgoCD"
spec:
  parentRefs:
  - name: internal-gateway
    namespace: nginx-gateway
    sectionName: https-internal
  hostnames:
  - "argocd.${CLUSTER_NAME}.home.io"
  rules:
  - matches:
    - path:
        type: PathPrefix
        value: /
    backendRefs:
    - name: argocd-server
      port: 80
      weight: 100
    filters:
    - type: RequestHeaderModifier
      requestHeaderModifier:
        set:
        - name: X-Forwarded-Proto
          value: https
        - name: X-Forwarded-Host
          value: "argocd.${CLUSTER_NAME}.home.io"