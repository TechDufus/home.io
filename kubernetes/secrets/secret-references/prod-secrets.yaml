# Production Environment Secret References
# These OnePasswordItem resources create Kubernetes secrets from 1Password vault items

---
# ArgoCD Admin Password
apiVersion: onepassword.com/v1
kind: OnePasswordItem
metadata:
  name: argocd-admin-password
  namespace: argocd
  labels:
    app.kubernetes.io/name: argocd
    app.kubernetes.io/component: secret
    environment: prod
spec:
  itemPath: "vaults/cicd/items/prod-argocd-admin"
  secretKey: "argocd.admin.password"
  secretName: "argocd-initial-admin-secret"
  secretType: "Opaque"
  secretLabels:
    app.kubernetes.io/name: argocd
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/managed-by: onepassword-operator
  secretAnnotations:
    onepassword.com/item-path: "vaults/cicd/items/prod-argocd-admin"
    onepassword.com/sync-interval: "300s"  # Longer interval for prod

---
# ArgoCD OIDC Configuration for SSO
apiVersion: onepassword.com/v1
kind: OnePasswordItem
metadata:
  name: argocd-oidc-config
  namespace: argocd
  labels:
    app.kubernetes.io/name: argocd
    app.kubernetes.io/component: secret
    environment: prod
spec:
  itemPath: "vaults/cicd/items/prod-argocd-oidc"
  secretKey: "oidc.config"
  secretName: "argocd-oidc-config"
  secretType: "Opaque"
  secretLabels:
    app.kubernetes.io/name: argocd
    app.kubernetes.io/managed-by: onepassword-operator

---
# GitHub Repository Access Token (Production)
apiVersion: onepassword.com/v1
kind: OnePasswordItem
metadata:
  name: argocd-repo-token
  namespace: argocd
  labels:
    app.kubernetes.io/name: argocd
    app.kubernetes.io/component: secret
    environment: prod
spec:
  itemPath: "vaults/cicd/items/github-argocd-prod-token"
  secretKey: "password"
  secretName: "argocd-repo-credentials"
  secretType: "Opaque"
  secretLabels:
    argocd.argoproj.io/secret-type: repository

---
# Cloudflare API Token for Cert-Manager (Production)
apiVersion: onepassword.com/v1
kind: OnePasswordItem
metadata:
  name: cloudflare-api-token
  namespace: cert-manager
  labels:
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/component: secret
    environment: prod
spec:
  itemPath: "vaults/cicd/items/prod-cloudflare-dns-token"
  secretKey: "api-token"
  secretName: "cloudflare-api-token"
  secretType: "Opaque"
  secretLabels:
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/managed-by: onepassword-operator

---
# External-DNS Cloudflare API Token (Production)
apiVersion: onepassword.com/v1
kind: OnePasswordItem
metadata:
  name: external-dns-cloudflare-token
  namespace: external-dns
  labels:
    app.kubernetes.io/name: external-dns
    app.kubernetes.io/component: secret
    environment: prod
spec:
  itemPath: "vaults/cicd/items/prod-cloudflare-dns-token"
  secretKey: "api-token"
  secretName: "external-dns-cloudflare"
  secretType: "Opaque"

---
# Harbor Container Registry (Production)
apiVersion: onepassword.com/v1
kind: OnePasswordItem
metadata:
  name: harbor-registry-credentials
  namespace: default
  labels:
    app.kubernetes.io/name: harbor
    app.kubernetes.io/component: secret
    environment: prod
spec:
  itemPath: "vaults/cicd/items/prod-harbor-registry"
  secretKey: ".dockerconfigjson"
  secretName: "harbor-registry-secret"
  secretType: "kubernetes.io/dockerconfigjson"

---
# Database Credentials (Production PostgreSQL)
apiVersion: onepassword.com/v1
kind: OnePasswordItem
metadata:
  name: postgres-credentials
  namespace: database
  labels:
    app.kubernetes.io/name: postgresql
    app.kubernetes.io/component: secret
    environment: prod
spec:
  itemPath: "vaults/cicd/items/prod-postgresql-credentials"
  secretKey: "postgres-password"
  secretName: "postgres-credentials"
  secretType: "Opaque"

---
# Redis Authentication (Production)
apiVersion: onepassword.com/v1
kind: OnePasswordItem
metadata:
  name: redis-auth
  namespace: database
  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/component: secret
    environment: prod
spec:
  itemPath: "vaults/cicd/items/prod-redis-auth"
  secretKey: "redis-password"
  secretName: "redis-auth"
  secretType: "Opaque"

---
# Backup Storage Credentials (S3 Compatible)
apiVersion: onepassword.com/v1
kind: OnePasswordItem
metadata:
  name: backup-storage-credentials
  namespace: backup
  labels:
    app.kubernetes.io/name: velero
    app.kubernetes.io/component: secret
    environment: prod
spec:
  itemPath: "vaults/cicd/items/prod-backup-storage"
  secretKey: "credentials"
  secretName: "backup-storage-credentials"
  secretType: "Opaque"

---
# Monitoring - Prometheus Remote Write
apiVersion: onepassword.com/v1
kind: OnePasswordItem
metadata:
  name: prometheus-remote-write
  namespace: monitoring
  labels:
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/component: secret
    environment: prod
spec:
  itemPath: "vaults/cicd/items/prod-prometheus-remote-write"
  secretKey: "remote-write-config"
  secretName: "prometheus-remote-write"
  secretType: "Opaque"

---
# Grafana LDAP/OIDC Configuration
apiVersion: onepassword.com/v1
kind: OnePasswordItem
metadata:
  name: grafana-auth-config
  namespace: monitoring
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/component: secret
    environment: prod
spec:
  itemPath: "vaults/cicd/items/prod-grafana-oidc"
  secretKey: "oidc-config"
  secretName: "grafana-auth-config"
  secretType: "Opaque"

---
# SSL/TLS Certificates for Internal Services
apiVersion: onepassword.com/v1
kind: OnePasswordItem
metadata:
  name: internal-ca-certificates
  namespace: cert-manager
  labels:
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/component: secret
    environment: prod
spec:
  itemPath: "vaults/cicd/items/prod-internal-ca-cert"
  secretKey: "tls.crt"
  secretName: "internal-ca-cert"
  secretType: "kubernetes.io/tls"

---
# Service Mesh mTLS Certificates (if using Istio/Linkerd)
apiVersion: onepassword.com/v1
kind: OnePasswordItem
metadata:
  name: service-mesh-ca
  namespace: istio-system
  labels:
    app.kubernetes.io/name: istio
    app.kubernetes.io/component: secret
    environment: prod
spec:
  itemPath: "vaults/cicd/items/prod-service-mesh-ca"
  secretKey: "root-cert.pem"
  secretName: "cacerts"
  secretType: "Opaque"

---
# Cloudflare Tunnel Token for External Access (Production)
apiVersion: onepassword.com/v1
kind: OnePasswordItem
metadata:
  name: cloudflare-tunnel-token
  namespace: cloudflare-tunnel
  labels:
    app.kubernetes.io/name: cloudflare-tunnel
    app.kubernetes.io/component: secret
    environment: prod
spec:
  itemPath: "vaults/cicd/items/prod-${CLUSTER_NAME}-tunnel-token"
  secretKey: "token"
  secretName: "cloudflare-tunnel-token"
  secretType: "Opaque"

---
# PagerDuty Integration for Critical Alerts
apiVersion: onepassword.com/v1
kind: OnePasswordItem
metadata:
  name: pagerduty-integration
  namespace: monitoring
  labels:
    app.kubernetes.io/name: alertmanager
    app.kubernetes.io/component: secret
    environment: prod
spec:
  itemPath: "vaults/cicd/items/pagerduty-alerting"
  secretKey: "integration-key"
  secretName: "pagerduty-integration"
  secretType: "Opaque"