apiVersion: v1
kind: ServiceAccount
metadata:
  name: onepassword-operator
  namespace: onepassword-operator
  labels:
    app.kubernetes.io/name: onepassword-operator
    app.kubernetes.io/component: service-account
automountServiceAccountToken: true
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: onepassword-operator
  labels:
    app.kubernetes.io/name: onepassword-operator
rules:
# Core OnePasswordItem management
- apiGroups: ["onepassword.com"]
  resources: ["onepassworditems"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["onepassword.com"]
  resources: ["onepassworditems/status"]
  verbs: ["get", "update", "patch"]
- apiGroups: ["onepassword.com"]
  resources: ["onepassworditems/finalizers"]
  verbs: ["update"]

# Secret management
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

# ConfigMap access for operator configuration
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "list", "watch"]

# Events for troubleshooting
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]

# Service account token access
- apiGroups: [""]
  resources: ["serviceaccounts/token"]
  verbs: ["create"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: onepassword-operator
  labels:
    app.kubernetes.io/name: onepassword-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: onepassword-operator
subjects:
- kind: ServiceAccount
  name: onepassword-operator
  namespace: onepassword-operator
---
# Role for accessing operator configuration in its own namespace
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: onepassword-operator-config
  namespace: onepassword-operator
  labels:
    app.kubernetes.io/name: onepassword-operator
rules:
- apiGroups: [""]
  resources: ["configmaps", "secrets"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["get", "list", "watch", "update", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: onepassword-operator-config
  namespace: onepassword-operator
  labels:
    app.kubernetes.io/name: onepassword-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: onepassword-operator-config
subjects:
- kind: ServiceAccount
  name: onepassword-operator
  namespace: onepassword-operator
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: onepassword-operator
  namespace: onepassword-operator
  labels:
    app.kubernetes.io/name: onepassword-operator
    app.kubernetes.io/component: controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: onepassword-operator
  template:
    metadata:
      labels:
        app.kubernetes.io/name: onepassword-operator
      annotations:
        # Restart pods when secret changes
        secret/checksum: ""  # Will be populated by deployment script
    spec:
      serviceAccountName: onepassword-operator
      securityContext:
        runAsNonRoot: true
        runAsUser: 65532
        runAsGroup: 65532
        fsGroup: 65532
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: operator
        image: 1password/onepassword-operator:1.4.3
        imagePullPolicy: IfNotPresent
        env:
        - name: WATCH_NAMESPACE
          value: ""  # Watch all namespaces
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: OPERATOR_NAME
          value: onepassword-operator
        - name: OP_CONNECT_HOST
          value: "https://connect-api.1password.com"
        - name: OP_CONNECT_TOKEN
          valueFrom:
            secretKeyRef:
              name: onepassword-token
              key: token
        - name: POLLING_INTERVAL
          value: "60"  # Check for changes every 60 seconds
        - name: OP_LOG_LEVEL
          value: "info"
        ports:
        - containerPort: 8080
          name: metrics
          protocol: TCP
        - containerPort: 8443
          name: webhook
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 512Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65532
          runAsGroup: 65532
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: webhook-certs
          mountPath: /tmp/k8s-webhook-server/serving-certs
          readOnly: true
      volumes:
      - name: tmp
        emptyDir: {}
      - name: webhook-certs
        secret:
          secretName: onepassword-operator-webhook-certs
          optional: true
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - onepassword-operator
              topologyKey: kubernetes.io/hostname
      tolerations:
      - key: node-role.kubernetes.io/control-plane
        operator: Exists
        effect: NoSchedule
---
apiVersion: v1
kind: Service
metadata:
  name: onepassword-operator-metrics
  namespace: onepassword-operator
  labels:
    app.kubernetes.io/name: onepassword-operator
    app.kubernetes.io/component: metrics
spec:
  ports:
  - name: metrics
    port: 8080
    targetPort: 8080
    protocol: TCP
  selector:
    app.kubernetes.io/name: onepassword-operator
---
apiVersion: v1
kind: Service
metadata:
  name: onepassword-operator-webhook
  namespace: onepassword-operator
  labels:
    app.kubernetes.io/name: onepassword-operator
    app.kubernetes.io/component: webhook
spec:
  ports:
  - name: webhook
    port: 443
    targetPort: 8443
    protocol: TCP
  selector:
    app.kubernetes.io/name: onepassword-operator
---
# ServiceMonitor for Prometheus monitoring (if available)
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: onepassword-operator
  namespace: onepassword-operator
  labels:
    app.kubernetes.io/name: onepassword-operator
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: onepassword-operator
      app.kubernetes.io/component: metrics
  endpoints:
  - port: metrics
    interval: 30s
    path: /metrics