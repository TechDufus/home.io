# Pod Security Standards for Secret Management
# These policies ensure secure deployment of applications that use 1Password secrets

---
# Restricted namespace for 1Password operator
apiVersion: v1
kind: Namespace
metadata:
  name: onepassword-operator
  labels:
    name: onepassword-operator
    # Apply restricted Pod Security Standards
    pod-security.kubernetes.io/enforce: restricted
    pod-security.kubernetes.io/audit: restricted
    pod-security.kubernetes.io/warn: restricted
    # Secret management namespace
    security.home.io/secret-access: operator
  annotations:
    description: "1Password Secret Operator with restricted security policies"

---
# Network policy to isolate 1Password operator
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: onepassword-operator-isolation
  namespace: onepassword-operator
  labels:
    app.kubernetes.io/name: onepassword-operator
    security.home.io/policy-type: isolation
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: onepassword-operator
  policyTypes:
  - Ingress
  - Egress
  
  # Ingress rules - what can access the operator
  ingress:
  # Allow Kubernetes API server to communicate with webhook
  - from:
    - namespaceSelector:
        matchLabels:
          name: kube-system
    ports:
    - protocol: TCP
      port: 8443  # Webhook port
  
  # Allow monitoring from monitoring namespace
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 8080  # Metrics port
  
  # Egress rules - what the operator can access
  egress:
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53
  
  # Allow HTTPS to 1Password Connect API
  - to: []
    ports:
    - protocol: TCP
      port: 443
    # Specific to 1Password Connect API endpoints
    namespaceSelector: {}
  
  # Allow access to Kubernetes API
  - to:
    - namespaceSelector:
        matchLabels:
          name: kube-system
    ports:
    - protocol: TCP
      port: 6443

---
# Security context constraints for applications using 1Password secrets
apiVersion: v1
kind: ConfigMap
metadata:
  name: secret-security-guidelines
  namespace: onepassword-operator
  labels:
    app.kubernetes.io/name: onepassword-operator
    security.home.io/policy-type: guidelines
data:
  security-requirements.yaml: |
    # Applications using 1Password secrets must follow these security requirements
    
    required_security_context:
      # Pod-level security context
      runAsNonRoot: true
      runAsUser: 65532
      runAsGroup: 65532
      fsGroup: 65532
      seccompProfile:
        type: RuntimeDefault
      
      # Container-level security context
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true
      runAsNonRoot: true
      runAsUser: 65532
      runAsGroup: 65532
      capabilities:
        drop:
        - ALL
    
    required_resource_limits:
      # Prevent resource exhaustion
      requests:
        cpu: "50m"
        memory: "64Mi"
      limits:
        cpu: "500m"
        memory: "512Mi"
    
    required_volume_mounts:
      # Only allow specific volume types
      allowed_volume_types:
      - secret
      - configMap
      - emptyDir
      - projected
      
      # Prohibited volume types for security
      prohibited_volume_types:
      - hostPath
      - hostPID
      - hostNetwork
      - privileged
    
    network_policies:
      # Applications must define network policies
      egress_restrictions:
      - "DNS resolution only (port 53)"
      - "HTTPS to required external services only"
      - "Internal cluster communication as needed"
      
      ingress_restrictions:
      - "Application-specific ingress only"
      - "No privileged port access"
      - "Load balancer communication only"

---
# ValidatingAdmissionWebhook for secret security enforcement
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingAdmissionWebhook
metadata:
  name: secret-security-validator
  labels:
    app.kubernetes.io/name: onepassword-operator
    security.home.io/policy-type: admission-control
webhooks:
- name: validate-secret-usage.security.home.io
  clientConfig:
    service:
      name: onepassword-operator-webhook
      namespace: onepassword-operator
      path: /validate-secret-security
  rules:
  # Validate pods that mount secrets created by 1Password operator
  - operations: ["CREATE", "UPDATE"]
    apiGroups: [""]
    apiVersions: ["v1"]
    resources: ["pods"]
  # Validate deployments using 1Password secrets
  - operations: ["CREATE", "UPDATE"]
    apiGroups: ["apps"]
    apiVersions: ["v1"]
    resources: ["deployments", "daemonsets", "statefulsets"]
  admissionReviewVersions: ["v1", "v1beta1"]
  sideEffects: None
  failurePolicy: Fail
  # Only apply to resources with 1Password secret labels
  objectSelector:
    matchExpressions:
    - key: app.kubernetes.io/managed-by
      operator: In
      values: ["onepassword-operator"]

---
# RBAC for secret access audit logging
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: secret-audit-reader
  labels:
    security.home.io/audit: enabled
rules:
# Read-only access to audit secret access patterns
- apiGroups: [""]
  resources: ["events"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["onepassword.com"]
  resources: ["onepassworditems"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: secret-audit-binding
  labels:
    security.home.io/audit: enabled
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: secret-audit-reader
subjects:
# Service account for security monitoring tools
- kind: ServiceAccount
  name: security-monitor
  namespace: monitoring

---
# Emergency break-glass access for secret management
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: emergency-secret-access
  labels:
    security.home.io/access-level: emergency
  annotations:
    description: "Emergency access for disaster recovery - use with extreme caution"
rules:
# Full access to all secrets and 1Password resources
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["*"]
- apiGroups: ["onepassword.com"]
  resources: ["onepassworditems"]
  verbs: ["*"]
# Access to operator configuration
- apiGroups: ["apps"]
  resources: ["deployments"]
  resourceNames: ["onepassword-operator"]
  verbs: ["get", "update", "patch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: emergency-secret-access-binding
  labels:
    security.home.io/access-level: emergency
  annotations:
    warning: "This binding provides emergency access to all secrets - monitor usage carefully"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: emergency-secret-access
subjects:
# Only bind to specific emergency users - update as needed
- kind: User
  name: emergency-admin@techdufus.com
  apiGroup: rbac.authorization.k8s.io