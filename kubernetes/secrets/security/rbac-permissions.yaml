# RBAC Permissions for 1Password Secret Management
# Defines granular permissions for different roles and service accounts

---
# Service account for application developers
apiVersion: v1
kind: ServiceAccount
metadata:
  name: app-developer
  namespace: default
  labels:
    rbac.home.io/role: developer
    security.home.io/access-level: limited
automountServiceAccountToken: false

---
# Role for application developers - can create OnePasswordItem resources
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: default
  name: onepassword-item-creator
  labels:
    rbac.home.io/role: developer
rules:
# Can create and manage OnePasswordItem resources in their namespace
- apiGroups: ["onepassword.com"]
  resources: ["onepassworditems"]
  verbs: ["create", "get", "list", "watch", "update", "patch", "delete"]
# Can read the resulting secrets (but not modify them directly)
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "watch"]
# Can read ConfigMaps for application configuration
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: app-developer-onepassword
  namespace: default
  labels:
    rbac.home.io/role: developer
subjects:
- kind: ServiceAccount
  name: app-developer
  namespace: default
- kind: User
  name: developer@techdufus.com
  apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: Role
  name: onepassword-item-creator
  apiGroup: rbac.authorization.k8s.io

---
# Service account for CI/CD systems
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cicd-deployer
  namespace: argocd
  labels:
    rbac.home.io/role: cicd
    security.home.io/access-level: automated
automountServiceAccountToken: true

---
# ClusterRole for CI/CD systems - broader access for deployment
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cicd-onepassword-manager
  labels:
    rbac.home.io/role: cicd
rules:
# Can manage OnePasswordItem resources across namespaces
- apiGroups: ["onepassword.com"]
  resources: ["onepassworditems"]
  verbs: ["create", "get", "list", "watch", "update", "patch", "delete"]
# Can read secrets to verify deployment
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "watch"]
# Can create namespaces for new applications
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["create", "get", "list", "watch"]
# Can manage deployments that use secrets
- apiGroups: ["apps"]
  resources: ["deployments", "statefulsets", "daemonsets"]
  verbs: ["create", "get", "list", "watch", "update", "patch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cicd-onepassword-binding
  labels:
    rbac.home.io/role: cicd
subjects:
- kind: ServiceAccount
  name: cicd-deployer
  namespace: argocd
- kind: User
  name: github-actions@techdufus.com
  apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: ClusterRole
  name: cicd-onepassword-manager
  apiGroup: rbac.authorization.k8s.io

---
# Service account for monitoring and observability
apiVersion: v1
kind: ServiceAccount
metadata:
  name: secret-monitor
  namespace: monitoring
  labels:
    rbac.home.io/role: monitor
    security.home.io/access-level: readonly
automountServiceAccountToken: true

---
# Role for monitoring secret usage and health
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: secret-monitor
  labels:
    rbac.home.io/role: monitor
rules:
# Read-only access to OnePasswordItem resources for monitoring
- apiGroups: ["onepassword.com"]
  resources: ["onepassworditems"]
  verbs: ["get", "list", "watch"]
# Read secret metadata (not contents) for health checks
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "watch"]
# Read events related to secret management
- apiGroups: [""]
  resources: ["events"]
  verbs: ["get", "list", "watch"]
# Read 1Password operator metrics
- apiGroups: [""]
  resources: ["services", "endpoints"]
  verbs: ["get", "list", "watch"]
# Read operator deployment status
- apiGroups: ["apps"]
  resources: ["deployments"]
  resourceNames: ["onepassword-operator"]
  verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: secret-monitor-binding
  labels:
    rbac.home.io/role: monitor
subjects:
- kind: ServiceAccount
  name: secret-monitor
  namespace: monitoring
- kind: ServiceAccount
  name: prometheus
  namespace: monitoring
roleRef:
  kind: ClusterRole
  name: secret-monitor
  apiGroup: rbac.authorization.k8s.io

---
# Service account for security auditing
apiVersion: v1
kind: ServiceAccount
metadata:
  name: security-auditor
  namespace: security
  labels:
    rbac.home.io/role: security
    security.home.io/access-level: audit
automountServiceAccountToken: true

---
# Role for security auditing of secret access
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: security-auditor
  labels:
    rbac.home.io/role: security
rules:
# Full read access to audit secret usage
- apiGroups: ["onepassword.com"]
  resources: ["onepassworditems"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["secrets", "events", "pods", "serviceaccounts"]
  verbs: ["get", "list", "watch"]
# Read RBAC configuration
- apiGroups: ["rbac.authorization.k8s.io"]
  resources: ["roles", "rolebindings", "clusterroles", "clusterrolebindings"]
  verbs: ["get", "list", "watch"]
# Read network policies
- apiGroups: ["networking.k8s.io"]
  resources: ["networkpolicies"]
  verbs: ["get", "list", "watch"]
# Read admission controllers
- apiGroups: ["admissionregistration.k8s.io"]
  resources: ["validatingadmissionwebhooks", "mutatingadmissionwebhooks"]
  verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: security-auditor-binding
  labels:
    rbac.home.io/role: security
subjects:
- kind: ServiceAccount
  name: security-auditor
  namespace: security
- kind: User
  name: security-admin@techdufus.com
  apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: ClusterRole
  name: security-auditor
  apiGroup: rbac.authorization.k8s.io

---
# Namespace-specific role for application teams
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: applications
  name: app-team-secret-manager
  labels:
    rbac.home.io/role: app-team
rules:
# Can manage secrets within their namespace
- apiGroups: ["onepassword.com"]
  resources: ["onepassworditems"]
  verbs: ["create", "get", "list", "watch", "update", "patch", "delete"]
# Can read resulting secrets
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "watch"]
# Can manage their application resources
- apiGroups: ["apps"]
  resources: ["deployments", "statefulsets", "daemonsets", "replicasets"]
  verbs: ["create", "get", "list", "watch", "update", "patch", "delete"]
- apiGroups: [""]
  resources: ["services", "configmaps", "persistentvolumeclaims"]
  verbs: ["create", "get", "list", "watch", "update", "patch", "delete"]

---
# Sample binding for application team
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: app-team-binding
  namespace: applications
  labels:
    rbac.home.io/role: app-team
subjects:
- kind: User
  name: app-team-lead@techdufus.com
  apiGroup: rbac.authorization.k8s.io
- kind: ServiceAccount
  name: app-team-deployer
  namespace: applications
roleRef:
  kind: Role
  name: app-team-secret-manager
  apiGroup: rbac.authorization.k8s.io

---
# Read-only role for operators/SRE
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: operator-readonly
  labels:
    rbac.home.io/role: operator
rules:
# Read access to troubleshoot secret issues
- apiGroups: ["onepassword.com"]
  resources: ["onepassworditems"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["secrets", "events", "pods", "services", "configmaps"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments", "statefulsets", "daemonsets"]
  verbs: ["get", "list", "watch"]
# Can describe resources for troubleshooting
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get", "list"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: operator-readonly-binding
  labels:
    rbac.home.io/role: operator
subjects:
- kind: User
  name: sre@techdufus.com
  apiGroup: rbac.authorization.k8s.io
- kind: User
  name: operator@techdufus.com
  apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: ClusterRole
  name: operator-readonly
  apiGroup: rbac.authorization.k8s.io