---
- name: Loading secret vars...
  include_vars:
    file: secrets.yaml
  tags: config

- name: Install Flux Docker
  shell: |
    export usernew="{{ ansible_user }}"
    echo "1" | bash -i <(curl -s https://raw.githubusercontent.com/RunOnFlux/fluxnode-multitool/master/multitoolbox.sh)
  become: true
  become_user: root
  args:
    executable: /bin/bash

- name: Deploy Install configuration file to flux node
  template:
    src: "install_conf.j2"
    dest: "/home/{{ ansible_user }}/install_conf.json"
  tags: config

- name: Deploy flux update aliases to flux node
  template:
    src: "update_flux.j2"
    dest: /etc/profile.d/update_flux.sh
  become: true
  tags: config

# The failed condition needs to regex any node tier, not just cumulus.
# - name: Check FluxOS Status
#   shell: fluxbench-cli getbenchmarks | jq .status
#   register: flux_status
#   failed_when: flux_status.stdout == "\"CUMULUS\""

# - name: "Installing FluxNode - Go get some coffee. :)"
#   shell: |
#     echo "2" | bash -i <(curl -s https://raw.githubusercontent.com/RunOnFlux/fluxnode-multitool/master/multitoolbox.sh)
#   args:
#     executable: /bin/bash
#   # async: 28800 # 8 hours
#   become: yes
#   become_user: "{{ ansible_user }}"

# - name: Run update-flux command
#   shell: bash -ilc 'update-flux'
#   become: yes
#   become_user: "{{ ansible_user }}"
#  when: zelflux_dir.stdout == "true"

- name: Checking for fluxbench file
  stat:
    path: "/home/{{ ansible_user }}/.fluxbenchmark/fluxbench.conf"
  register: fluxbench
  tags: config

- name: Deploy fluxbench config file
  template:
    src: "fluxbench.j2"
    dest: "/home/{{ ansible_user }}/.fluxbenchmark/fluxbench.conf"
    owner: "root"
    group: "root"
    mode: 0644
  become: true
  when: fluxbench.stat.exists
  tags: config

- name: Checking for watchdog config file
  stat:
    path: "/home/{{ ansible_user }}/watchdog/config.js"
  register: watchdog_config
  tags: config

- name: Deploy watchdog config file
  template:
    src: "watchdog_config.j2"
    dest: "/home/{{ ansible_user }}/watchdog/config.js"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0644
  when: watchdog_config.stat.exists
  notify:
    - "flux: Restart Watchdog"
  tags: config

