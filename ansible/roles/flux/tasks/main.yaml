---
# - name: Install Flux Docker
#   shell: |
#     export usernew="{{ ansible_user }}"
#     echo "1" | bash -i <(curl -s https://raw.githubusercontent.com/RunOnFlux/fluxnode-multitool/master/multitoolbox.sh)
#   become: yes
#   become_user: root
#   args:
#     executable: /bin/bash

- name: Deploy Install configuration file to flux node
  copy:
    src: "{{ ansible_hostname }}/install_conf.json"
    dest: "/home/{{ ansible_user }}/install_conf.json"

- name: Deploy flux update aliases to flux node
  template:
    src: "update_flux.j2"
    dest: /etc/profile.d/update_flux.sh
  become: yes

# - name: Check for root flux bootstrap file
#   shell: |
#     if [[ -f /root/flux_explorer_bootstrap.tar.gz ]]; then
#       echo "0"
#     else
#       echo "1"
#     fi
#   register: bootstrap_file
#   become: yes
#   become_user: root

# - name: Move root bootstrap file into {{ ansible_user }} flux directory
#   copy:
#     src: "root/flux_explorer_bootstrap.tar.gz"
#     dest: "/home/{{ ansible_user }}/.flux/flux_explorer_bootstrap.tar.gz"
#   become: yes
#   become_user: "{{ ansible_user }}"
#   when: bootstrap_file.stdout|bool

# The failed condition needs to regex any node tier, not just cumulus.
# - name: Check FluxOS Status
#   shell: fluxbench-cli getbenchmarks | jq .status
#   register: flux_status
#   failed_when: flux_status.stdout == "\"CUMULUS\""

# - name: "Installing FluxNode - Go get some coffee. :)"
#   shell: |
#     echo "2" | bash -i <(curl -s https://raw.githubusercontent.com/RunOnFlux/fluxnode-multitool/master/multitoolbox.sh)
#   args:
#     executable: /bin/bash
#   # async: 28800 # 8 hours
#   become: yes
#   become_user: "{{ ansible_user }}"

# - name: Ensure .fluxbenchmark directory exists
#   file:
#     path: "/home/{{ ansible_user }}/.fluxbenchmark"
#     state: directory

# - name: Deploy fluxbench.conf file
#   copy:
#     src: "{{ ansible_hostname }}/fluxbench.conf"
#     dest: "/home/{{ ansible_user }}/.fluxbenchmark/fluxbench.conf"

# - name: Run multitoolbox to configure uPnP
#   shell: |
#     echo "14" | bash -ilc <(curl -s {{ github_multitoolbox_repo_root }}multitoolbox.sh)

# - name: Ensure watchdog directory exists
#   file:
#     path: "/home/{{ ansible_user }}/watchdog"
#     state: directory

# - name: Deploy watchdog configuration file to flux node
#   copy:
#     src: "{{ ansible_hostname }}/watchdog.js"
#     dest: "/home/{{ ansible_user }}/watchdog/config.js"

# - name: Reload Watchdog
#   shell: bash -ilc 'pm2 reload watchdog --watch'
#   become: yes
#   become_user: "{{ ansible_user }}"
#   register: watchdog_reload
#   failed_when: watchdog_reload.rc != 127

# - name: Test for zelflux directory
#   shell: |
#     if [ -d "/home/{{ ansible_user }}/zelflux" ]; then
#       echo "true"
#     fi
#   register: zelflux_dir
#   changed_when: false

# - name: Run update-flux command
#   shell: bash -ilc 'update-flux'
#   become: yes
#   become_user: "{{ ansible_user }}"
#   when: zelflux_dir.stdout == "true"
