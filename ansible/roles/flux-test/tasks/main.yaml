---
- import_tasks: user-setup.yaml
  tags: user-setup

- name: Install Flux Docker
  shell: |
    export usernew="{{ flux_user }}"
    echo "1" | bash -i <(curl -s {{ github_multitoolbox_repo_root }}multitoolbox.sh) development
  become: yes
  become_user: root
  args:
    executable: /bin/bash

# - name: Run Multitoolbox to create alias.
#   shell: |
#     bash -i <(curl -s {{ github_multitoolbox_repo_root }}multitoolbox.sh)


- name: Deploy TESTNET Install configuration file to flux node
  copy:
    src: "testnet_install_conf.json"
    dest: "/home/{{ flux_user }}/install_conf.json"
    force: yes
  tags: testnet

- name: Deploy MAINNET Install configuration file to flux node
  copy:
    src: "mainnet_install_conf.json"
    dest: "/home/{{ flux_user }}/install_conf.json"
    force: yes
  tags: mainnet

- name: Deploy flux update aliases to flux node
  template:
    src: "update_flux.j2"
    dest: /etc/profile.d/update_flux.sh
  become: yes

# # - name: Check for root flux bootstrap file
# #   shell: |
# #     if [[ -f /root/flux_explorer_bootstrap.tar.gz ]]; then
# #       echo "0"
# #     else
# #       echo "1"
# #     fi
# #   register: bootstrap_file
# #   become: yes
# #   become_user: root

# # - name: Move root bootstrap file into {{ ansible_user }} flux directory
# #   copy:
# #     src: "root/flux_explorer_bootstrap.tar.gz"
# #     dest: "/home/{{ ansible_user }}/.flux/flux_explorer_bootstrap.tar.gz"
# #   become: yes
# #   become_user: "{{ ansible_user }}"
# #   when: bootstrap_file.stdout|bool

# The failed condition needs to regex any node tier, not just cumulus.
# - name: Check FluxOS Status
#   shell: fluxbench-cli getbenchmarks | jq .status
#   register: flux_status
#   failed_when: flux_status.stdout == "\"CUMULUS\""

# - name: "Installing FluxNode - Go get some coffee. :)"
#   shell: |
#     echo "2" | bash -il <(curl -s {{ github_multitoolbox_repo_root }}multitoolbox_testnet.sh)
#   args:
#     executable: /bin/bash
#   async: 14400 # 4 hours
#   become: yes
#   become_user: "{{ flux_user }}"
#   when: flux_status.stdout == ""

# - name: Run multitoolbox to configure uPnP
#   shell: |
#     echo "14" | bash -ilc <(curl -s {{ github_multitoolbox_repo_root }}multitoolbox.sh)

# - name: Test for zelflux directory
#   shell: |
#     if [ -d "/home/{{ flux_user }}/zelflux" ]; then
#       echo "true"
#     fi
#   register: zelflux_dir
#   changed_when: false

# - name: Run update-flux command
#   shell: bash -ilc 'update-flux'
#   become: yes
#   become_user: "{{ flux_user }}"
#   when: zelflux_dir.stdout == "true"

