---
- name: Update apt cache
  apt:
    update_cache: yes
    cache_valid_time: 3600

- name: Install common packages
  apt:
    name: "{{ common_packages }}"
    state: present

- name: Create kernel modules configuration
  copy:
    content: |
      {% for module in k8s_kernel_modules %}
      {{ module }}
      {% endfor %}
    dest: /etc/modules-load.d/k8s.conf
    mode: '0644'

- name: Load kernel modules
  modprobe:
    name: "{{ item }}"
    state: present
  loop: "{{ k8s_kernel_modules }}"

- name: Configure sysctl for Kubernetes
  sysctl:
    name: "{{ item.key }}"
    value: "{{ item.value }}"
    state: present
    reload: yes
    sysctl_file: /etc/sysctl.d/k8s.conf
  loop: "{{ k8s_sysctl_config | dict2items }}"

- name: Disable swap
  when: disable_swap
  block:
    - name: Turn off swap
      command: swapoff -a
      changed_when: false

    - name: Remove swap from fstab
      replace:
        path: /etc/fstab
        regexp: '^([^#].*?\sswap\s+sw\s+.*)$'
        replace: '# \1'

- name: Add Docker GPG key
  apt_key:
    url: "{{ docker_apt_repo }}/gpg"
    keyring: /usr/share/keyrings/docker-archive-keyring.gpg
    state: present

- name: Add Docker repository
  apt_repository:
    repo: "deb [arch={{ ansible_architecture }} signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] {{ docker_apt_repo }} {{ ansible_distribution_release }} stable"
    state: present
    filename: docker

- name: Install containerd
  apt:
    name: "{{ containerd_packages }}"
    state: present
    update_cache: yes

- name: Create containerd configuration directory
  file:
    path: /etc/containerd
    state: directory
    mode: '0755'

- name: Generate containerd configuration
  shell: containerd config default > /etc/containerd/config.toml
  args:
    creates: /etc/containerd/config.toml

- name: Configure containerd to use systemd cgroup driver
  replace:
    path: /etc/containerd/config.toml
    regexp: 'SystemdCgroup = false'
    replace: 'SystemdCgroup = true'

- name: Restart and enable containerd
  systemd:
    name: containerd
    state: restarted
    enabled: yes
    daemon_reload: yes

- name: Create crictl configuration
  copy:
    content: "{{ crictl_config | to_nice_yaml }}"
    dest: /etc/crictl.yaml
    mode: '0644'

- name: Add Kubernetes GPG key
  apt_key:
    url: "https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key"
    keyring: /etc/apt/keyrings/kubernetes-apt-keyring.gpg
    state: present

- name: Add Kubernetes repository
  apt_repository:
    repo: "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] {{ k8s_apt_repo }} /"
    state: present
    filename: kubernetes

- name: Install Kubernetes packages
  apt:
    name: "{{ item }}={{ k8s_version }}-*"
    state: present
    update_cache: yes
  loop: "{{ k8s_packages }}"

- name: Hold Kubernetes packages
  dpkg_selections:
    name: "{{ item }}"
    selection: hold
  loop: "{{ k8s_packages }}"

- name: Enable and start kubelet
  systemd:
    name: kubelet
    enabled: yes
    state: started
    daemon_reload: yes

- name: Configure kubelet to use correct cgroup driver
  lineinfile:
    path: /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
    regexp: '^Environment="KUBELET_CONFIG_ARGS'
    line: 'Environment="KUBELET_CONFIG_ARGS=--config=/var/lib/kubelet/config.yaml --cgroup-driver=systemd"'
    create: yes
  notify: restart kubelet

- name: Create kubectl bash completion
  shell: kubectl completion bash > /etc/bash_completion.d/kubectl
  args:
    creates: /etc/bash_completion.d/kubectl